ur_all = read.csv('accuracyFile_all_images_all_ur.txt',sep="\t");
ur_all[1]
ur_all[2]
ur_all[3]
hist(ur_all[3], breaks=c(0,0.2,0.4,0.6,0.8,1.0))
table(ur_all[3])
hist(ur_all[3], breaks=c(0,0.2,0.4,0.6,0.8,1.0))
hist(ur_all[3])
hist(ur_all$3)
hist(table(ur_all[3]), breaks=c(0,0.2,0.4,0.6,0.8,1.0))
hist(table(ur_all[3]))
ur_all = read.table('accuracyFile_all_images_all_ur.txt',header=FALSE,sep="\t");
summary(ur_all[3])
hist(ur_all[[3]])
jpeg('ur_all.jpg');hist(ur_all[[3]],main="Accuracy: UR+All",xlab="accuracy",ylab="Frequency");
dev.off()
gur_all = read.table('accuracyFile_all_images_all_gur.txt',header=FALSE,sep="\t");
jpeg('gur_all.jpg');hist(gur_all[[3]],main="Accuracy: GUR+All",xlab="accuracy",ylab="Frequency");dev.off()
iur_all = read.table('accuracyFile_all_images_all_iur.txt',header=FALSE,sep="\t");
jpeg('iur_all.jpg');hist(iur_all[[3]],main="Accuracy: IUR+All",xlab="accuracy",ylab="Frequency");dev.off()
ur_clarifai = read.table('accuracyFile_all_images_clarifai_ur.txt',header=FALSE,sep="\t");
jpeg('ur_vb.jpg');hist(ur_clarifai[[3]],main="Accuracy: UR+VB",xlab="accuracy",ylab="Frequency");dev.off()
gur_clarifai = read.table('accuracyFile_all_images_clarifai_gur.txt',header=FALSE,sep="\t");
jpeg('gur_vb.jpg');hist(gur_clarifai[[3]],main="Accuracy: GUR+VB",xlab="accuracy",ylab="Frequency");dev.off()
iur_clarifai = read.table('accuracyFile_all_images_clarifai_iur.txt',header=FALSE,sep="\t");
jpeg('iur_vb.jpg');hist(iur_clarifai[[3]],main="Accuracy: IUR+VB",xlab="accuracy",ylab="Frequency");dev.off()
ur_rr = read.table('accuracyFile_all_images_merge_ur.txt',header=FALSE,sep="\t");
jpeg('ur_rr.jpg');hist(ur_rr[[3]],main="Accuracy: UR+RR",xlab="accuracy",ylab="Frequency");dev.off()
gur_rr = read.table('accuracyFile_all_images_merge_gur.txt',header=FALSE,sep="\t");
jpeg('gur_rr.jpg');hist(gur_rr[[3]],main="Accuracy: GUR+RR",xlab="accuracy",ylab="Frequency");dev.off()
iur_rr = read.table('accuracyFile_all_images_merge_iur.txt',header=FALSE,sep="\t");
jpeg('iur_rr.jpg');hist(iur_rr[[3]],main="Accuracy: IUR+RR",xlab="accuracy",ylab="Frequency");dev.off()
jpeg('ur_all.jpg');hist(ur_all[[3]],main="Accuracy: UR+All",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);
jpeg('ur_all.jpg');hist(ur_all[[3]],main="Accuracy: UR+All",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('gur_all.jpg');hist(gur_all[[3]],main="Accuracy: GUR+All",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('iur_all.jpg');hist(iur_all[[3]],main="Accuracy: IUR+All",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('ur_vb.jpg');hist(ur_clarifai[[3]],main="Accuracy: UR+VB",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('gur_vb.jpg');hist(gur_clarifai[[3]],main="Accuracy: GUR+VB",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('iur_vb.jpg');hist(iur_clarifai[[3]],main="Accuracy: IUR+VB",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('ur_rr.jpg');hist(ur_rr[[3]],main="Accuracy: UR+RR",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('gur_rr.jpg');hist(gur_rr[[3]],main="Accuracy: GUR+RR",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('iur_rr.jpg');hist(iur_rr[[3]],main="Accuracy: IUR+RR",xlab="accuracy",ylab="Frequency",cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('ur_all.jpg');hist(ur_all[[3]],main="Accuracy: UR+All",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=1.5, cex.axis=1.5, cex.main=1.5);dev.off()
jpeg('ur_all.jpg');hist(ur_all[[3]],main="Accuracy: UR+All",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('gur_all.jpg');hist(gur_all[[3]],main="Accuracy: GUR+All",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('iur_all.jpg');hist(iur_all[[3]],main="Accuracy: IUR+All",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('ur_vb.jpg');hist(ur_clarifai[[3]],main="Accuracy: UR+VB",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('gur_vb.jpg');hist(gur_clarifai[[3]],main="Accuracy: GUR+VB",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('iur_vb.jpg');hist(iur_clarifai[[3]],main="Accuracy: IUR+VB",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('ur_rr.jpg');hist(ur_rr[[3]],main="Accuracy: UR+RR",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('gur_rr.jpg');hist(gur_rr[[3]],main="Accuracy: GUR+RR",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('iur_rr.jpg');hist(iur_rr[[3]],main="Accuracy: IUR+RR",xlab="accuracy",ylab="Frequency",ylim=c(0,1600),cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('ur_all.jpg');hist(ur_all[[3]],main="Accuracy: UR+All",xlab="accuracy",ylab="Frequency",cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('gur_all.jpg');hist(gur_all[[3]],main="Accuracy: GUR+All",xlab="accuracy",ylab="Frequency",cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('iur_all.jpg');hist(iur_all[[3]],main="Accuracy: IUR+All",xlab="accuracy",ylab="Frequency",cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('ur_rr.jpg');hist(ur_rr[[3]],main="Accuracy: UR+RR",xlab="accuracy",ylab="Frequency",cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('iur_rr.jpg');hist(iur_rr[[3]],main="Accuracy: IUR+RR",xlab="accuracy",ylab="Frequency",cex.lab=2, cex.axis=2, cex.main=2);dev.off()
jpeg('gur_rr.jpg');hist(gur_rr[[3]],main="Accuracy: GUR+RR",xlab="accuracy",ylab="Frequency",cex.lab=2, cex.axis=2, cex.main=2);dev.off()
q()
iur_all = read.table('accuracyFile_all_images_all_iur.txt',header=FALSE,sep="\t");
len(iur_all)
length(iur_all)
length(iur_all[[3]])
q()
iur <-file('accuracyFile_all_images_all_iur.txt','rb');
rawContent <- readLines(con)
rawContent <- readLines(iur)
close(iur)
expectedColumns <- 2
delim <- "\t"
indxToOffenders <-
sapply(rawContent, function(x)
   length(gregexpr(delim, x)[[1]]) != expectedColumns
)
indxToOffenders
expectedColumns <- 3
indxToOffenders <-
sapply(rawContent, function(x)
   length(gregexpr(delim, x)[[1]]) != expectedColumns
)
indxToOffenders
q()
